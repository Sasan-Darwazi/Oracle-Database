
Stored Procedure:
a S-P is also a Names PL-SQL block that accept some input in the form of parameters and performs some task and may or may not returns a value.z

Procedures are created to perform one or more dml operations over database.

Also A stored Procedure is a self-contained subprogram that is meant to do some specific tasks.
Procedure stored in the database as a database object.
and does not reutrn any value.

Or, A stored procedure is a set of SQL statements that are stored in the database and can be executed repeatedly. it provides code resuability and better performance.

SYNTAX: create [or replace] procedure pro-name (para1, para2...)
is
declare statement
Begin
Exuctable statements

 procedure name;

/













E.G: if you want to * two numbers at dbmsout.
declare
a int:=12;
b int:=20;
begin
dbms_output.put_line('Total : ' || a * b);
end;
/
--------------------------------------------------

E.G in this example we declare them datatype;
declare
a number(3);
b number(3);
begin
a:=200;
b:=200;
dbms_output.put_line(a + b);
end;
/
--------------------------------------

E.G: This ex will show the name,job,sal from emp;
declare
e_name varchar2(40);
e_job varchar2(40);
e_sal number(7,2);
begin
select ename,job,sal into e_name,e_job,e_sal from emp where empno = 1;
dbms_output.put_line('Emp Name = : ' || e_name);
dbms_output.put_line('Emp job = : ' || e_job);
dbms_output.put_line('Emp Sal = : ' || e_sal);
end;
/
-----------------------------------------

E.G:This ex will show the ename,job,sal like scanner, it mean the user should give the empno;

declare
e_name varchar2(40);
e_job varchar2(40);
e_no number(5);
begin
e_no:= &empno;
select ename,job into e_name,e_job from emp where empno = e_no;
dbms_output.put_line('Emp Name = : '|| e_name);
dbms_output.put_line('Emp job = : '|| e_job);
end;
/

Note: if you want apply the created procedures another time, just enter 
the (/) and empno which you have given before.
E.G:/
1;
------------------------------------
IF/elseif/else.
E.G: This is a true/false example.
declare
a int:=1;
begin
if a = 1 then
dbms_output.put_line('The number is 1');
elsif a = 2 then
dbms_output.put_line('The number is 2');
elsif a = 3 then
dbms_output.put_line('The number is 3');
else
dbms_output.put_line('The unknown number');
end if;
end;
/
-------------------------------------------------

E.G: Another example with varchar type.
declare
name varchar2(40):= 'Sasan';
begin
if name = 'Ahmad' then
dbms_output.put_line('Correct Ahmad');
elsif name = 'Sasan' then
dbms_output.put_line('Correct Sasan');
else
dbms_output.put_line('Unknown name');
end if;
end;
/
